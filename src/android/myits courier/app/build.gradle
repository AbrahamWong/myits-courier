apply plugin: 'com.android.application'

// Kotlin support
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
//    compileSdkVersion 30
//    buildToolsVersion "30.0.2"
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "id.ac.its.myits.courier"
//        minSdkVersion 24
//        targetSdkVersion 30
//        versionCode 1
//        versionName "alpha"
        minSdkVersion rootProject.ext.minimumSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        debug {
            buildConfigField "String", "REDIRECT_URI", "\"id.ac.its.myits.courier:/oauth2callback\""
            buildConfigField "String", "DEV_MYITS_URL", "\"https://dev-my.its.ac.id\""
            buildConfigField "String", "MYITS_URL", "\"https://my.its.ac.id\""
            buildConfigField "String", "DEV_COURIER_URL", "\"https://api.its.ac.id:8443/courier-sandbox/1.0\""
            buildConfigField "String", "COURIER_URL", "\"https://api.its.ac.id:8443/courier/1.0\""

            buildConfigField "String", "API_KEY", "\"MEtxYVBUS3lwYXB5V1VSOU1aSUxaVnh0YTEwYTpjQXFEc004aGhFTEw4WmJuSGY3c2Q4eE5GSTRh\""
            buildConfigField "String", "APP_TOKEN", "\"c6bfed35-68cc-3dd0-89c4-5ec6fddaadbd\""
            //Sandbox
            buildConfigField "String", "CLIENT_ID", "\"BD13563E-6550-4A1D-9DE0-0A9BB1593D65\""
            buildConfigField "String", "CLIENT_SECRET", "\"8mxsgjwivuo0go8kwg8s0gs8\""
            //Production
//            buildConfigField "String", "CLIENT_ID", "\"32E4D33A-914B-4F6D-989F-78C412E5837A\""
//            buildConfigField "String", "CLIENT_SECRET", "\"el2ezfu7660woscw8so80w8k\""
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
        release {
            buildConfigField "String", "REDIRECT_URI", "\"id.ac.its.myits.courier:/oauth2callback\""
            buildConfigField "String", "DEV_MYITS_URL", "\"https://dev-my.its.ac.id\""
            buildConfigField "String", "MYITS_URL", "\"https://my.its.ac.id\""
            buildConfigField "String", "DEV_COURIER_URL", "\"https://api.its.ac.id:8443/courier-sandbox/1.0\""
            buildConfigField "String", "COURIER_URL", "\"https://api.its.ac.id:8443/courier/1.0\""

            buildConfigField "String", "API_KEY", "\"MEtxYVBUS3lwYXB5V1VSOU1aSUxaVnh0YTEwYTpjQXFEc004aGhFTEw4WmJuSGY3c2Q4eE5GSTRh\""
            buildConfigField "String", "APP_TOKEN", "\"c6bfed35-68cc-3dd0-89c4-5ec6fddaadbd\""
            //Sandbox
            buildConfigField "String", "CLIENT_ID", "\"BD13563E-6550-4A1D-9DE0-0A9BB1593D65\""
            buildConfigField "String", "CLIENT_SECRET", "\"8mxsgjwivuo0go8kwg8s0gs8\""
            //Production
//            buildConfigField "String", "CLIENT_ID", "\"32E4D33A-914B-4F6D-989F-78C412E5837A\""
//            buildConfigField "String", "CLIENT_SECRET", "\"el2ezfu7660woscw8so80w8k\""
            //minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'com/itextpdf/io/font/cmap_info.txt'
        exclude 'com/itextpdf/io/font/cmap/*'
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // Kotlin support
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.preference:preference:1.1.1'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'com.google.android.material:material:1.2.1'

    // logger
    implementation "com.jakewharton.timber:timber:4.7.1"

    // Gson
    implementation "com.google.code.gson:gson:2.8.6"

    // network
    implementation "com.amitshekhar.android:rx2-android-networking:1.0.2"

    // dependency injection
    implementation 'com.google.dagger:dagger:2.27'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.27'
    implementation "com.google.dagger:dagger-android-support:2.27"
    annotationProcessor "com.google.dagger:dagger-compiler:2.27"

    // reactive
    implementation "io.reactivex.rxjava3:rxjava:3.0.6"
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'

    // code generator for view
    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'

    //FCM
    implementation "com.google.firebase:firebase-analytics:17.5.0"
    implementation "com.google.firebase:firebase-messaging:20.2.4"

    // openid
    implementation 'net.openid:appauth:0.7.1'

    // QR Code scanner
    implementation 'com.budiyev.android:code-scanner:2.1.0'

    // Custom beautiful view
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation "androidx.cardview:cardview:1.0.0"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.annotation:annotation:1.1.0'

    /**
     * Frontend purposes
     */

    implementation 'com.github.vipulasri:timelineview:1.1.0'
    // TimelineView, docs: https://github.com/vipulasri/Timeline-View

    implementation 'org.osmdroid:osmdroid-android:6.1.8'
    // OpenStreetMap, docs: https://github.com/osmdroid/osmdroid

}

private Integer generateVersionCode() {
    return rootProject.ext.minimumSdkVersion * 10000000 + rootProject.ext.versionMajor * 10000 + rootProject.ext.versionMinor * 100 + rootProject.ext.versionPatch
}

private String generateVersionName() {
    String versionName = "${rootProject.ext.versionMajor}.${rootProject.ext.versionMinor}.${rootProject.ext.versionPatch}"
    if (rootProject.ext.versionClassifier == null) {
        if (rootProject.ext.isSnapshot) {
            rootProject.ext.versionClassifier = "SNAPSHOT"
        }
    }

    if (rootProject.ext.versionClassifier != null) {
        versionName += "-" + rootProject.ext.versionClassifier
    }
    return versionName
}
